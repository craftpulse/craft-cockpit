{"version":3,"file":"matchfields-DGk2W9Ci.js","sources":["../../../../../buildchain/src/js/MatchFields.js"],"sourcesContent":["/** global: Craft */\n/** global: Garnish */\n/**\n * Match field index class\n */\nCraft.Cockpit.MatchFieldIndex = Craft.BaseElementIndex.extend({\n    editableMatchFieldTypes: null,\n    $newMatchFieldBtnGroup: null,\n    $newMatchFieldBtn: null,\n\n    init: function (elementType, $container, settings) {\n        this.on('selectSource', $.proxy(this, 'updateButton'));\n        this.on('selectSite', $.proxy(this, 'updateButton'));\n        this.base(elementType, $container, settings);\n    },\n\n    afterInit: function() {\n        // Find which of the visible matchFieldTypes the user has permission to create new match fields in\n        this.editableMatchFieldTypes = [];\n\n        for (const matchFieldType of Craft.Cockpit.editableMatchFieldTypes) {\n            if (this.getSourceByKey(`matchFieldType:${matchFieldType.uid}`)) {\n                this.editableMatchFieldTypes.push(matchFieldType);\n            }\n        }\n\n        this.base();\n    },\n\n    getDefaultSourceKey: function() {\n        // Did they request a specific Match Field matchFieldType in the URL?\n        if (\n            this.settings.context === 'index' &&\n            typeof defaultMatchFieldTypeHandle !== 'undefined'\n        ) {\n            for (var i = 0; i < this.$sources.length; i++) {\n                var $source = $(this.$sources[i]);\n\n                if ($source.data('handle') == defaultMatchFieldTypeHandle) {\n                    return $source.data('key');\n                }\n            }\n        }\n    },\n\n    updateButton: function() {\n        if (!this.$source) {\n            return;\n        }\n\n        // Get the handle of the selected source\n        const matchFieldTypeHandle = this.$source.data('handle');\n\n        // Update the New Match Field button\n        // ---------------------------------------------------------------------\n\n        if (this.editableMatchFieldTypes.length) {\n            // Remove the old button, if there is one\n            if (this.$newMatchFieldBtnGroup) {\n                this.$newMatchFieldBtnGroup.remove();\n            }\n\n            // Determine if they are viewing a matchFieldType that they have permission to create match fields in\n            const selectedMatchFieldType = this.editableMatchFieldTypes.find(\n                (t) => t.handle === matchFieldTypeHandle\n            );\n\n            this.$newMatchFieldBtnGroup = $(\n                '<div class=\"btngroup submit\" data-wrapper/>'\n            );\n            let $menuBtn;\n            const menuId = `new-match-field-menu-${Craft.randomString(10)}`;\n\n            // If they are, show a primary \"New product\" button, and a dropdown of the other matchFieldTypes (if any).\n            // Otherwise only show a menu button\n            if (selectedMatchFieldType) {\n                const visibleLabel =\n                    this.settings.context === 'index'\n                        ? Craft.t('cockpit', 'New match field')\n                        : Craft.t('cockpit', 'New {matchFieldType} field', {\n                            matchFieldType: selectedMatchFieldType.name,\n                        });\n\n                const ariaLabel =\n                    this.settings.context === 'index'\n                        ? Craft.t('cockpit', 'New {matchFieldType} field', {\n                            matchFieldType: selectedMatchFieldType.name,\n                        })\n                        : visibleLabel;\n\n                // In index contexts, the button functions as a link\n                // In non-index contexts, the button triggers a slideout editor\n                const role = this.settings.context === 'index' ? 'link' : null;\n\n                this.$newMatchFieldBtn = Craft.ui\n                    .createButton({\n                        label: visibleLabel,\n                        ariaLabel: ariaLabel,\n                        spinner: true,\n                        role: role,\n                    })\n                    .addClass('submit add icon')\n                    .appendTo(this.$newMatchFieldBtnGroup);\n\n                this.addListener(this.$newMatchFieldBtn, 'click mousedown', (event) => {\n                    // If this is the element index, check for Ctrl+clicks and middle button clicks\n                    if (\n                        this.settings.context === 'index' &&\n                        ((event.type === 'click' && Garnish.isCtrlKeyPressed(event)) ||\n                            (event.type === 'mousedown' && event.originalEvent.button === 1))\n                    ) {\n                        window.open(\n                            Craft.getUrl(`cockpit/matchfields/${matchFieldType.handle}/new`)\n                        );\n                    } else if (event.type === 'click') {\n                        this._createMatchFieldEntry(selectedMatchFieldType);\n                    }\n                });\n\n                if (this.editableMatchFieldTypes.length > 1) {\n                    $menuBtn = $('<button/>', {\n                        type: 'button',\n                        class: 'btn submit menubtn btngroup-btn-last',\n                        'aria-controls': menuId,\n                        'data-disclosure-trigger': '',\n                        'aria-label': Craft.t('cockpit', 'New match field, choose a type'),\n                    }).appendTo(this.$newMatchFieldBtnGroup)\n                }\n            } else {\n                this.$newMatchFieldBtn = $menuBtn = Craft.ui\n                    .createButton({\n                        label: Craft.t('cockpit', 'New match field'),\n                        ariaLabel: Craft.t('cockpit', 'New match field, choose a type'),\n                        spinner: true,\n                    })\n                    .addClass('submit add icon menubtn btngroup-btn-last')\n                    .attr('aria-controls', menuId)\n                    .attr('data-disclosure-trigger', '')\n                    .appendTo(this.$newMatchFieldBtnGroup);\n            }\n\n            this.addButton(this.$newMatchFieldBtnGroup);\n\n            if ($menuBtn) {\n                const $menuContainer = $('<div/>', {\n                    id: menuId,\n                    class: 'menu menu--disclosure',\n                }).appendTo(this.$newMatchFieldBtnGroup);\n\n                const $ul = $('<ul/>').appendTo($menuContainer);\n\n                for (const matchFieldType of this.editableMatchFieldTypes) {\n                    const anchorRole = this.settings.context === 'index' ? 'link' : 'button';\n                    if (\n                        this.settings.context === 'index' ||\n                        matchFieldType !== selectedMatchFieldType\n                    ) {\n                        const $li = $('<li/>').appendTo($ul);\n                        const $a = $('<a/>', {\n                            role: anchorRole === 'button' ? 'button' : null,\n                            href: Craft.getUrl(`cockpit/matchfields/${matchFieldType.handle}/new`),\n                            type: anchorRole === 'button' ? 'button' : null,\n                            text: Craft.t('cockpit', 'New {matchFieldType} field', {\n                                matchFieldType: matchFieldType.name,\n                            }),\n                        }).appendTo($li);\n\n                        this.addListener($a, 'activate', () => {\n                            $menuBtn.data('trigger').hide();\n                            this._createMatchFieldEntry(matchFieldType.id);\n                        });\n\n                        if (anchorRole === 'button') {\n                            this.addListener($a, 'keydown', (event) => {\n                                if (event.keyCode === Garnish.SPACE_KEY) {\n                                    event.preventDefault();\n                                    $menuBtn.data('trigger').hide();\n                                    this._createMatchFieldEntry(matchFieldType.id);\n                                }\n                            })\n                        }\n                    }\n                }\n\n                new Garnish.DisclosureMenu($menuBtn);\n            }\n        }\n\n        // Update the URL if we're on the Match Field Type index\n        if (this.settings.context === 'index') {\n            let uri = 'cockpit/matchfields';\n\n            if (matchFieldTypeHandle) {\n                uri += '/' + matchFieldTypeHandle;\n            }\n\n            Craft.setPath(uri);\n        }\n    },\n\n    _createMatchFieldEntry: function (matchFieldTypeId) {\n        if (this.$newMatchFieldBtn.hasClass('loading')) {\n            console.warn('New match field creation already in progress.');\n            return;\n        }\n\n        // Find the match field type\n        const matchFieldType = this.editableMatchFieldTypes.find(\n            (t) => t.id === matchFieldTypeId\n        );\n\n        if (!matchFieldType) {\n            throw `Invalid match field type ID: ${matchFieldTypeId}`;\n        }\n\n        this.$newMatchFieldBtn.addClass('loading');\n\n        Craft.sendActionRequest('POST', 'cockpit/match-fields/create', {\n            data: {\n                siteId: this.siteId,\n                matchFieldType: matchFieldType.handle,\n            },\n        })\n            .then(({data}) => {\n                if (this.settings.context === 'index') {\n                    document.location.href = Craft.getUrl(data.cpEditUrl, {fresh: 1});\n                } else {\n                    const slideout = Craft.createElementEditor(this.elementType, {\n                        siteId: this.siteId,\n                        elementId: data.matchfield.id,\n                        draftId: data.matchfield.draftId,\n                        params: {\n                            fresh: 1\n                        }\n                    });\n                    slideout.on('submit', () => {\n                        this.clearSearch();\n                        this.setSelectedSortAttribute('dateCreated', 'desc');\n                        this.selectElementAfterUpdate(data.matchfield.id);\n                        this.updateElements();\n                    })\n                }\n            })\n            .finally(() => {\n                this.$newMatchFieldBtn.removeClass('loading');\n            })\n    },\n})\n"],"names":["elementType","$container","settings","matchFieldType","i","$source","matchFieldTypeHandle","selectedMatchFieldType","t","$menuBtn","menuId","visibleLabel","ariaLabel","role","event","$menuContainer","$ul","anchorRole","$li","$a","uri","matchFieldTypeId","data"],"mappings":"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"}