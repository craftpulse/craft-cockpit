{% requirePermission "cockpit:settings" %}

{% extends "cockpit/_layouts/cockpit-cp-settings.twig" %}
{% import '_includes/forms.twig' as forms %}
{% from 'cockpit/_macros' import instructions %}

{% set headlessMode = craft.app.config.general.headlessMode %}

{% set crumbs = [
    { label: 'Cockpit'|t('cockpit'), url: url('cockpit') },
    { label: 'Settings'|t('cockpit'), url: url('cockpit/settings'), ariaLabel: 'Cockpit Settings'|t('cockpit') },
] %}

{% set selectedSubnavItem = 'settings' %}

{% if readOnly %}
    {% set contentNotice = readOnlyNotice() %}
{% endif %}

{% import "_includes/forms" as forms %}

{% block content %}

    {% if not readOnly %}
        {{ actionInput('cockpit/departments/save-settings') }}
    {% endif %}

    <input type="hidden" name="pluginHandle" value="cockpit">

    <div class="flex-fields">
        {% set siteRows = [] %}
        {% set siteErrors = settings.getErrors('departmentSiteSettings') %}

        {% for site in craft.app.sites.getAllSites() %}
            {% set siteSettings = settings.departmentSiteSettings[site.id] ?? null %}
            {% set siteRows = siteRows|merge({
                (site.handle): {
                    heading: site.name|t('site')|e,
                    enabled: include('_includes/forms/lightswitch.twig', {
                        name: 'sites['~site.handle~'][enabled]',
                        on: siteSettings,
                        value: site.id,
                        small: true,
                        disabled: readOnly,
                    }),
                    uriFormat: {
                        value: siteSettings ? siteSettings.uriFormat,
                    },
                    template: not headlessMode ? {
                        value: siteSettings ? siteSettings.template,
                    },
                    enabledByDefault: siteSettings ? siteSettings.enabledByDefault : true,
                }|filter
            }) %}
{#            {% set siteRows = siteRows|merge({#}
{#                (site.handle): {#}
{#                    heading: site.name|t('site')|e,#}
{#                    enabled: include('_includes/forms/lightswitch.twig', {#}
{#                        name: 'sites['~site.handle~'][enabled]',#}
{#                        on: siteSettings,#}
{#                        value: site.id,#}
{#                        small: true,#}
{#                        disabled: readOnly,#}
{#                    }),#}
{#                    uriFormat: {#}
{#                        value: siteSettings ? siteSettings.uriFormat,#}
{#                        hasErrors: siteSettings ? siteSettings.hasErrors('uriFormat'),#}
{#                    },#}
{#                    template: not headlessMode ? {#}
{#                        value: siteSettings ? siteSettings.template,#}
{#                        hasErrors: siteSettings ? siteSettings.hasErrors('template'),#}
{#                    },#}
{#                    enabledByDefault: siteSettings ? siteSettings.enabledByDefault : true,#}
{#                }|filter#}
{#            }) %}#}
        {% endfor %}

        {{ forms.editableTableField({
            label: "Site Settings"|t('app'),
            instructions: "Choose which sites this match field should be available in, and configure the site-specific settings."|t('cockpit'),
            id: 'sites',
            name: 'sites',
            cols: {
                heading: {
                    type: 'heading',
                    heading: "Site"|t('app'),
                    thin: true
                },
                enabled: {
                    type: 'heading',
                    thin: true,
                    class: not craft.app.getIsMultiSite() ? 'hidden'
                },
                uriFormat: {
                    type: 'singleline',
                    heading: "Department URI Format"|t('cockpit'),
                    info: "What entry URIs should look like for the site. Leave blank if departments don’t have URLs."|t('cockpit'),
                    placeholder: 'Leave blank if departments don’t have URLs'|t('cockpit'),
                    code: true,
                    width: headlessMode ? 500,
                },
                template: not headlessMode ? {
                    type: 'template',
                    heading: "Template"|t('app'),
                    info: "Which template should be loaded when an departments URL is requested."|t('cockpit'),
                    code: true
                },
                enabledByDefault: {
                    type: 'lightswitch',
                    heading: "Default Status"|t('app'),
                    thin: true,
                }
            }|filter,
            rows: siteRows,
            fullWidth: true,
            allowAdd: false,
            allowDelete: false,
            allowReorder: false,
            errors: siteErrors|unique,
            static: readOnly,
        }) }}
{#        {{ forms.editableTableField({#}
{#            label: "Routing Settings"|t('cockpit'),#}
{#            instructions: "Configure the department’s front-end routing settings."|t('cockpit'),#}
{#            id: 'routing',#}
{#            name: 'settings',#}
{#            cols: {#}
{#                uriFormat: {#}
{#                    type: 'singleline',#}
{#                    heading: "Deparmtent URI Format"|t('cockpit'),#}
{#                    info: "What department URIs should look like."|t('cockpit'),#}
{#                    placeholder: "Leave blank if departments don’t have URLs"|t('cockpit'),#}
{#                    code: true#}
{#                },#}
{#                template:{#}
{#                    type: 'template',#}
{#                    heading: "Template"|t('app'),#}
{#                    info: "Which template should be loaded when a department’s URL is requested."|t('cockpit'),#}
{#                    code: true#}
{#                },#}
{#            }|filter,#}
{#            rows: {#}
{#                'routing': {#}
{#                    uriFormat: {#}
{#                        value: settings.departmentUriFormat ?? null,#}
{#                        hasErrors: settings.hasErrors('departmentUriFormat') ?? false#}
{#                    },#}
{#                    template: {#}
{#                        value: settings.departmentTemplate ?? null,#}
{#                        hasErrors: settings.hasErrors('departmentTemplate') ?? false,#}
{#                    }#}
{#                }#}
{#            },#}
{#            allowAdd: false,#}
{#            allowDelete: false,#}
{#            allowReorder: false,#}
{#            errors: []|unique#}
{#        }) }}#}

        {{ forms.fieldLayoutDesignerField({
            fieldLayout: settings.getDepartmentFieldLayout(),
        }) }}
    </div>
{% endblock %}

{#{% if brandNew %}#}
{#    {% js %}#}
{#        new Craft.HandleGenerator('#name', '#handle');#}

{#        {% for site in craft.app.sites.getAllSites() %}#}
{#            new Craft.UriFormatGenerator(#}
{#            '#name',#}
{#            '#sites tr[data-id="{{ site.handle }}"] textarea[name$="[singleUri]"]',#}
{#            { updateWhenHidden: true }#}
{#            );#}
{#            new Craft.UriFormatGenerator(#}
{#            '#name',#}
{#            '#sites tr[data-id="{{ site.handle }}"] textarea[name$="[uriFormat]"]',#}
{#            { suffix: '/{slug}', updateWhenHidden: true }#}
{#            );#}
{#            new Craft.UriFormatGenerator(#}
{#            '#name',#}
{#            '#sites tr[data-id="{{ site.handle }}"] input[name$="[template]"]',#}
{#            { suffix: '/_entry.twig', updateWhenHidden: true }#}
{#            );#}
{#        {% endfor %}#}
{#    {% endjs %}#}
{#{% endif %}#}
